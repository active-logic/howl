⊐ NUnit.Framework;
⊐ Active.Howl; ⊐ Sv = Active.Howl.Subversion; ⊐̥ Unit.VersioningData;

⊓ Unit{
‒ ○ VersioningTest : TestBase{

    ᴸ ㄹ Manifest = "package.json";

    Versioning ι;

    ⍜ Setup(){
        ι = ⌢ Versioning();
        ι.tagging = ⌢ TaggingMock();
        Manifest.Write(data);
    }

    // --------------------------------------------------------------

    ؟ GetVersionedFiles(){
        ".version".Write("foo.cs\nbar.howl\n");
        ㄹ[] files = ι.GetVersionedFiles(".");
        o( files[0], "foo.cs" );
        o( files[1], "bar.howl" );
        ".version".JustDelete(dry: ✗);
    }

    ؟ Get ⎚ o( ι.Get(".").ToString(), "0.1.6" );

    ؟ Inc_withTag(){
        ι.Increment(".", Sv.major, "tag");
        o( (ι.tagging as TaggingMock).cmd, "Tag 1.1.6 ." );
    }

    ؟ Inc_major(){ ι.Increment(".", Sv.major); o( Has("1.1.6") ); }

    ؟ Inc_minor(){ ι.Increment(".", Sv.minor); o( Has("0.2.6") ); }

    ؟ Inc_patch(){ ι.Increment(".", Sv.patch); o( Has("0.1.7") ); }

    // --------------------------------------------------------------

    ‒ ㅇ Has(ㄹ x) → Manifest.Read().Contains(x);

}}
