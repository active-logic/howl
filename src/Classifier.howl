⊐ self = Active.Howl.Classifier;

⊓ Active.Howl{
‒ ○ Classifier{

  ㄹ _class;

 // public string @class => _class;

  ‒ Classifier(ㄹ _class){
    ⦿._class = _class;
  }

  ‒̥ self k   → ⌢ self("Key");   // keyword (general class)
  ‒̥ self c   → ⌢ self("Cat");   // type signifier
  ‒̥ self m   → ⌢ self("Mod");   // modifier
  ‒̥ self f   → ⌢ self("Flow");  // control flow
  ‒̥ self p   → ⌢ self("Pr");    // primitive/std type
  ‒̥ self s   → ⌢ self("Const"); // constant
  //
  ‒̥ self o   → ⌢ self("Op");    //
  //
  ‒̥ self x   → ⌢ self("Spe");   // special

  ‒̥ self[] all → ⌢ self[]{ c, f, k, m, o, p, s, x };

  ‒̥ Rep ⨕ * (Rep x, self y){
      x._class = y._class;
      ⮐ x;
  }

  ‒̥ Rep ⨕ * (self x, Rep y){
      y._class = x._class;
      ⮐ y;
  }

  ⁺‒ ㄹ ToString()  → _class;

  ⒤ ㄹ(Classifier x)
  → x🝠;

}}
